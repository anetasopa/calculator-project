{"ast":null,"code":"import { Moment } from './constructor';\nvar proto = Moment.prototype;\nimport { add, subtract } from './add-subtract';\nimport { calendar } from './calendar';\nimport { clone } from './clone';\nimport { isBefore, isBetween, isSame, isAfter, isSameOrAfter, isSameOrBefore } from './compare';\nimport { diff } from './diff';\nimport { format, toString, toISOString, inspect } from './format';\nimport { from, fromNow } from './from';\nimport { to, toNow } from './to';\nimport { stringGet, stringSet } from './get-set';\nimport { locale, localeData, lang } from './locale';\nimport { prototypeMin, prototypeMax } from './min-max';\nimport { startOf, endOf } from './start-end-of';\nimport { valueOf, toDate, toArray, toObject, toJSON, unix } from './to-type';\nimport { isValid, parsingFlags, invalidAt } from './valid';\nimport { creationData } from './creation-data';\nproto.add = add;\nproto.calendar = calendar;\nproto.clone = clone;\nproto.diff = diff;\nproto.endOf = endOf;\nproto.format = format;\nproto.from = from;\nproto.fromNow = fromNow;\nproto.to = to;\nproto.toNow = toNow;\nproto.get = stringGet;\nproto.invalidAt = invalidAt;\nproto.isAfter = isAfter;\nproto.isBefore = isBefore;\nproto.isBetween = isBetween;\nproto.isSame = isSame;\nproto.isSameOrAfter = isSameOrAfter;\nproto.isSameOrBefore = isSameOrBefore;\nproto.isValid = isValid;\nproto.lang = lang;\nproto.locale = locale;\nproto.localeData = localeData;\nproto.max = prototypeMax;\nproto.min = prototypeMin;\nproto.parsingFlags = parsingFlags;\nproto.set = stringSet;\nproto.startOf = startOf;\nproto.subtract = subtract;\nproto.toArray = toArray;\nproto.toObject = toObject;\nproto.toDate = toDate;\nproto.toISOString = toISOString;\nproto.inspect = inspect;\n\nif (typeof Symbol !== undefined && Symbol.for != null) {\n  proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n    return 'Moment<' + this.format() + '>';\n  };\n}\n\nproto.toJSON = toJSON;\nproto.toString = toString;\nproto.unix = unix;\nproto.valueOf = valueOf;\nproto.creationData = creationData; // Era\n\nimport { getEraName, getEraNarrow, getEraAbbr, getEraYear } from '../units/era';\nproto.eraName = getEraName;\nproto.eraNarrow = getEraNarrow;\nproto.eraAbbr = getEraAbbr;\nproto.eraYear = getEraYear; // Year\n\nimport { getSetYear, getIsLeapYear } from '../units/year';\nproto.year = getSetYear;\nproto.isLeapYear = getIsLeapYear; // Week Year\n\nimport { getSetWeekYear, getSetISOWeekYear, getWeeksInYear, getWeeksInWeekYear, getISOWeeksInYear, getISOWeeksInISOWeekYear } from '../units/week-year';\nproto.weekYear = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear; // Quarter\n\nimport { getSetQuarter } from '../units/quarter';\nproto.quarter = proto.quarters = getSetQuarter; // Month\n\nimport { getSetMonth, getDaysInMonth } from '../units/month';\nproto.month = getSetMonth;\nproto.daysInMonth = getDaysInMonth; // Week\n\nimport { getSetWeek, getSetISOWeek } from '../units/week';\nproto.week = proto.weeks = getSetWeek;\nproto.isoWeek = proto.isoWeeks = getSetISOWeek;\nproto.weeksInYear = getWeeksInYear;\nproto.weeksInWeekYear = getWeeksInWeekYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\nproto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear; // Day\n\nimport { getSetDayOfMonth } from '../units/day-of-month';\nimport { getSetDayOfWeek, getSetISODayOfWeek, getSetLocaleDayOfWeek } from '../units/day-of-week';\nimport { getSetDayOfYear } from '../units/day-of-year';\nproto.date = getSetDayOfMonth;\nproto.day = proto.days = getSetDayOfWeek;\nproto.weekday = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear = getSetDayOfYear; // Hour\n\nimport { getSetHour } from '../units/hour';\nproto.hour = proto.hours = getSetHour; // Minute\n\nimport { getSetMinute } from '../units/minute';\nproto.minute = proto.minutes = getSetMinute; // Second\n\nimport { getSetSecond } from '../units/second';\nproto.second = proto.seconds = getSetSecond; // Millisecond\n\nimport { getSetMillisecond } from '../units/millisecond';\nproto.millisecond = proto.milliseconds = getSetMillisecond; // Offset\n\nimport { getSetOffset, setOffsetToUTC, setOffsetToLocal, setOffsetToParsedOffset, hasAlignedHourOffset, isDaylightSavingTime, isDaylightSavingTimeShifted, getSetZone, isLocal, isUtcOffset, isUtc } from '../units/offset';\nproto.utcOffset = getSetOffset;\nproto.utc = setOffsetToUTC;\nproto.local = setOffsetToLocal;\nproto.parseZone = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST = isDaylightSavingTime;\nproto.isLocal = isLocal;\nproto.isUtcOffset = isUtcOffset;\nproto.isUtc = isUtc;\nproto.isUTC = isUtc; // Timezone\n\nimport { getZoneAbbr, getZoneName } from '../units/timezone';\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName; // Deprecations\n\nimport { deprecate } from '../utils/deprecate';\nproto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\nexport default proto;","map":{"version":3,"sources":["/Users/sopa/react-calculator/node_modules/moment/src/lib/moment/prototype.js"],"names":["Moment","proto","prototype","add","subtract","calendar","clone","isBefore","isBetween","isSame","isAfter","isSameOrAfter","isSameOrBefore","diff","format","toString","toISOString","inspect","from","fromNow","to","toNow","stringGet","stringSet","locale","localeData","lang","prototypeMin","prototypeMax","startOf","endOf","valueOf","toDate","toArray","toObject","toJSON","unix","isValid","parsingFlags","invalidAt","creationData","get","max","min","set","Symbol","undefined","for","getEraName","getEraNarrow","getEraAbbr","getEraYear","eraName","eraNarrow","eraAbbr","eraYear","getSetYear","getIsLeapYear","year","isLeapYear","getSetWeekYear","getSetISOWeekYear","getWeeksInYear","getWeeksInWeekYear","getISOWeeksInYear","getISOWeeksInISOWeekYear","weekYear","isoWeekYear","getSetQuarter","quarter","quarters","getSetMonth","getDaysInMonth","month","daysInMonth","getSetWeek","getSetISOWeek","week","weeks","isoWeek","isoWeeks","weeksInYear","weeksInWeekYear","isoWeeksInYear","isoWeeksInISOWeekYear","getSetDayOfMonth","getSetDayOfWeek","getSetISODayOfWeek","getSetLocaleDayOfWeek","getSetDayOfYear","date","day","days","weekday","isoWeekday","dayOfYear","getSetHour","hour","hours","getSetMinute","minute","minutes","getSetSecond","second","seconds","getSetMillisecond","millisecond","milliseconds","getSetOffset","setOffsetToUTC","setOffsetToLocal","setOffsetToParsedOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","getSetZone","isLocal","isUtcOffset","isUtc","utcOffset","utc","local","parseZone","isDST","isUTC","getZoneAbbr","getZoneName","zoneAbbr","zoneName","deprecate","dates","months","years","zone","isDSTShifted"],"mappings":"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","sourcesContent":["import { Moment } from './constructor';\n\nvar proto = Moment.prototype;\n\nimport { add, subtract } from './add-subtract';\nimport { calendar } from './calendar';\nimport { clone } from './clone';\nimport {\n    isBefore,\n    isBetween,\n    isSame,\n    isAfter,\n    isSameOrAfter,\n    isSameOrBefore,\n} from './compare';\nimport { diff } from './diff';\nimport { format, toString, toISOString, inspect } from './format';\nimport { from, fromNow } from './from';\nimport { to, toNow } from './to';\nimport { stringGet, stringSet } from './get-set';\nimport { locale, localeData, lang } from './locale';\nimport { prototypeMin, prototypeMax } from './min-max';\nimport { startOf, endOf } from './start-end-of';\nimport { valueOf, toDate, toArray, toObject, toJSON, unix } from './to-type';\nimport { isValid, parsingFlags, invalidAt } from './valid';\nimport { creationData } from './creation-data';\n\nproto.add = add;\nproto.calendar = calendar;\nproto.clone = clone;\nproto.diff = diff;\nproto.endOf = endOf;\nproto.format = format;\nproto.from = from;\nproto.fromNow = fromNow;\nproto.to = to;\nproto.toNow = toNow;\nproto.get = stringGet;\nproto.invalidAt = invalidAt;\nproto.isAfter = isAfter;\nproto.isBefore = isBefore;\nproto.isBetween = isBetween;\nproto.isSame = isSame;\nproto.isSameOrAfter = isSameOrAfter;\nproto.isSameOrBefore = isSameOrBefore;\nproto.isValid = isValid;\nproto.lang = lang;\nproto.locale = locale;\nproto.localeData = localeData;\nproto.max = prototypeMax;\nproto.min = prototypeMin;\nproto.parsingFlags = parsingFlags;\nproto.set = stringSet;\nproto.startOf = startOf;\nproto.subtract = subtract;\nproto.toArray = toArray;\nproto.toObject = toObject;\nproto.toDate = toDate;\nproto.toISOString = toISOString;\nproto.inspect = inspect;\nif (typeof Symbol !== undefined && Symbol.for != null) {\n    proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n        return 'Moment<' + this.format() + '>';\n    };\n}\nproto.toJSON = toJSON;\nproto.toString = toString;\nproto.unix = unix;\nproto.valueOf = valueOf;\nproto.creationData = creationData;\n\n// Era\nimport { getEraName, getEraNarrow, getEraAbbr, getEraYear } from '../units/era';\nproto.eraName = getEraName;\nproto.eraNarrow = getEraNarrow;\nproto.eraAbbr = getEraAbbr;\nproto.eraYear = getEraYear;\n\n// Year\nimport { getSetYear, getIsLeapYear } from '../units/year';\nproto.year = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nimport {\n    getSetWeekYear,\n    getSetISOWeekYear,\n    getWeeksInYear,\n    getWeeksInWeekYear,\n    getISOWeeksInYear,\n    getISOWeeksInISOWeekYear,\n} from '../units/week-year';\nproto.weekYear = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nimport { getSetQuarter } from '../units/quarter';\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nimport { getSetMonth, getDaysInMonth } from '../units/month';\nproto.month = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nimport { getSetWeek, getSetISOWeek } from '../units/week';\nproto.week = proto.weeks = getSetWeek;\nproto.isoWeek = proto.isoWeeks = getSetISOWeek;\nproto.weeksInYear = getWeeksInYear;\nproto.weeksInWeekYear = getWeeksInWeekYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\nproto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n\n// Day\nimport { getSetDayOfMonth } from '../units/day-of-month';\nimport {\n    getSetDayOfWeek,\n    getSetISODayOfWeek,\n    getSetLocaleDayOfWeek,\n} from '../units/day-of-week';\nimport { getSetDayOfYear } from '../units/day-of-year';\nproto.date = getSetDayOfMonth;\nproto.day = proto.days = getSetDayOfWeek;\nproto.weekday = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear = getSetDayOfYear;\n\n// Hour\nimport { getSetHour } from '../units/hour';\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nimport { getSetMinute } from '../units/minute';\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nimport { getSetSecond } from '../units/second';\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nimport { getSetMillisecond } from '../units/millisecond';\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nimport {\n    getSetOffset,\n    setOffsetToUTC,\n    setOffsetToLocal,\n    setOffsetToParsedOffset,\n    hasAlignedHourOffset,\n    isDaylightSavingTime,\n    isDaylightSavingTimeShifted,\n    getSetZone,\n    isLocal,\n    isUtcOffset,\n    isUtc,\n} from '../units/offset';\nproto.utcOffset = getSetOffset;\nproto.utc = setOffsetToUTC;\nproto.local = setOffsetToLocal;\nproto.parseZone = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST = isDaylightSavingTime;\nproto.isLocal = isLocal;\nproto.isUtcOffset = isUtcOffset;\nproto.isUtc = isUtc;\nproto.isUTC = isUtc;\n\n// Timezone\nimport { getZoneAbbr, getZoneName } from '../units/timezone';\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nimport { deprecate } from '../utils/deprecate';\nproto.dates = deprecate(\n    'dates accessor is deprecated. Use date instead.',\n    getSetDayOfMonth\n);\nproto.months = deprecate(\n    'months accessor is deprecated. Use month instead',\n    getSetMonth\n);\nproto.years = deprecate(\n    'years accessor is deprecated. Use year instead',\n    getSetYear\n);\nproto.zone = deprecate(\n    'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n    getSetZone\n);\nproto.isDSTShifted = deprecate(\n    'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n    isDaylightSavingTimeShifted\n);\n\nexport default proto;\n"]},"metadata":{},"sourceType":"module"}